---
import { ISODateToJSDate } from '../../../utils';

interface NewsSentimentTicker {
  relevance_score: string;
  ticker: string;
  ticker_sentiment_label: string;
  ticker_sentiment_score: string;
}

export interface NewsSentimentArticle {
  banner_image: string | null,
  category_within_source: string;
  overall_sentiment_label: string;
  overall_sentiment_score: number;
  source: string;
  summary: string;
  ticker_sentiment: NewsSentimentTicker[],
  time_published: string;
  title: string;
  url: string;
}

export interface Props {
  article: NewsSentimentArticle;
}

const {article} = Astro.props;
---

<article class:list={'article-news-sentiment'}>
  <div class="row">
    <div class="image">
      <img src={article.banner_image ? article.banner_image : '/images/news-placeholder.png'} alt={article.title}>
    </div>
    <div class="text-content">
      <h3 class="headline">
        <a href={article.url} target="_blank" rel="noopener" title={article.title}>{article.title}</a>
      </h3>
      <div class="meta">
        <span class="datetime">{new Date(ISODateToJSDate(article.time_published)).toLocaleDateString()}</span>
        <span class="source">{article.source}</span>
        <span class="sentiment-label">{article.overall_sentiment_label} ({article.overall_sentiment_score.toFixed(2)})</span>
      </div>
      <div class="summary">{article.summary}</div>
    </div>
  </div>
  <div class="ticker-sentiments">
    {article.ticker_sentiment.length > 0 &&
      (<div class="ticker-sentiments-scroller">
        {article.ticker_sentiment.map(ticker => {
          return (
            <div class:list={['ticker-data', ticker.ticker_sentiment_label.toLowerCase()]}>
              <a class="ticker" href={`/symbol/${ticker.ticker}`}>{ticker.ticker}</a>
              <div class="sentiment">{ticker.ticker_sentiment_label}</div>
            </div>
          )
        })}
      </div>)
    }
  </div>
</article>


<style lang="scss">
@use '../../../styles/mixins';

.article-news-sentiment {
  & + & {
    margin-block-start: 1rem;
  }
}

.row {
  display: flex;
  gap: 1rem;

  img {
    aspect-ratio: 230 / 130;
    max-width: 230px;
    object-fit: cover;
  }
}

.headline {
  color: var(--color-heading);
  font-weight: 700;
}

.headline,
.summary {
  line-height: 1.5;
  font-size: .875rem;
  @include mixins.lineclamp();
}

.meta {
  font-size: .75rem;
  margin-block: 1rem;
  font-weight: 300;

  span + span {
    margin-inline-start: 2rem;
  }
}

.ticker-sentiments {
  padding-block-start: .5rem;
  overflow: hidden;
}

.ticker-sentiments-scroller {
  display: flex;
  gap: 1rem;
  overflow-x: auto;
  @include mixins.scrollbars();
}

.ticker-data {
  font-weight: 300;
  text-align: center;
  font-size: .7rem;

  .ticker {
    font-size: .8rem;
  }
}

[class*="bullish"] {
  color: var(--color-positive);
}

[class*="bearish"] {
  color: var(--color-negative);
}
</style>
